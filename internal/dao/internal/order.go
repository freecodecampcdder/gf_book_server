// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// OrderDao is the data access object for table order.
type OrderDao struct {
	table   string       // table is the underlying table name of the DAO.
	group   string       // group is the database configuration group name of current DAO.
	columns OrderColumns // columns contains all the column names of Table for convenient usage.
}

// OrderColumns defines and stores column names for table order.
type OrderColumns struct {
	Id           string //
	CreatedAt    string //
	UpdatedAt    string //
	DeletedAt    string //
	UserId       string //
	AddressName  string //
	AddressPhone string //
	Address      string //
	BookId       string //
	Price        string //
	Way          string // 1租 2买
	Status       string // 0 未支付  1已支付 2已发货 3已归还 4已签收 5已取消 6待归还
	LendAt       string // 借出时间
	ReturnAt     string // 归还时间
}

// orderColumns holds the columns for table order.
var orderColumns = OrderColumns{
	Id:           "id",
	CreatedAt:    "created_at",
	UpdatedAt:    "updated_at",
	DeletedAt:    "deleted_at",
	UserId:       "user_id",
	AddressName:  "address_name",
	AddressPhone: "address_phone",
	Address:      "address",
	BookId:       "book_id",
	Price:        "price",
	Way:          "way",
	Status:       "status",
	LendAt:       "lend_at",
	ReturnAt:     "return_at",
}

// NewOrderDao creates and returns a new DAO object for table data access.
func NewOrderDao() *OrderDao {
	return &OrderDao{
		group:   "default",
		table:   "order",
		columns: orderColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OrderDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *OrderDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *OrderDao) Columns() OrderColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *OrderDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OrderDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OrderDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
