// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// AddressDao is the data access object for table address.
type AddressDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns AddressColumns // columns contains all the column names of Table for convenient usage.
}

// AddressColumns defines and stores column names for table address.
type AddressColumns struct {
	Id             string //
	UserId         string //
	ReceiverName   string // 接收人名称
	ReceiverPhone  string // 接收人手机号
	AddressContent string // 地址
	Status         string // 1正常 2默认地址
	CreatedAt      string //
	UpdatedAt      string //
	DeletedAt      string //
}

// addressColumns holds the columns for table address.
var addressColumns = AddressColumns{
	Id:             "id",
	UserId:         "user_id",
	ReceiverName:   "receiver_name",
	ReceiverPhone:  "receiver_phone",
	AddressContent: "address_content",
	Status:         "status",
	CreatedAt:      "created_at",
	UpdatedAt:      "updated_at",
	DeletedAt:      "deleted_at",
}

// NewAddressDao creates and returns a new DAO object for table data access.
func NewAddressDao() *AddressDao {
	return &AddressDao{
		group:   "default",
		table:   "address",
		columns: addressColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *AddressDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *AddressDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *AddressDao) Columns() AddressColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *AddressDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *AddressDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *AddressDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
